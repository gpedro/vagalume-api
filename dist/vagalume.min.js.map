{"version":3,"sources":["../index.js"],"names":[],"mappings":"wgBAAA,qC,mDACA,wCACA,gC,2pBAEA,GAAM,YAAa,6BAAnB,CACA,GAAM,YAAa,6BAAnB,C,GAEM,S,YAEL,kBAAY,MAAZ,CAAoB,gCACnB,KAAK,MAAL,CAAc,MACd,C,2DAEM,G,CAAkB,IAAb,OAAa,2DAAJ,EAAI,CACxB,GAAI,KAAK,MAAL,EAAe,CAAC,OAAO,QAAP,CAApB,CAAsC,CACrC,OAAO,QAAP,EAAmB,KAAK,MACxB,CAED,GAAI,IAAK,2BAAU,MAAV,CAAT,CACA,MAAO,wBAAS,GAAT,KAAgB,EAAhB,EAAsB,IAAtB,CAA2B,oBAAO,KAAI,IAAJ,EAAP,CAA3B,CACP,C,qGAEY,O,KAAQ,Q,2DAAU,E,yHACxB,I,CAAO,sBAAQ,OAAR,C,iCACN,KAAK,MAAL,CAAe,UAAf,KAA6B,IAA7B,aAA8C,OAA9C,C,6OAGK,O,qHACZ,GAAI,QAAQ,KAAR,GAAkB,QAAQ,GAAR,EAAe,QAAQ,GAAzC,CAAJ,CAAmD,CAClD,MAAO,SAAQ,GAAf,CACA,MAAO,SAAQ,GACf,CAED,GAAI,QAAQ,KAAZ,CAAmB,CAClB,GAAI,QAAQ,KAAR,WAAyB,MAA7B,CAAoC,CACnC,QAAQ,KAAR,CAAgB,QAAQ,KAAR,CAAc,IAAd,CAAmB,GAAnB,CAChB,CACD,C,iCAEM,KAAK,MAAL,CAAe,UAAf,eAAwC,OAAxC,C,qPAGK,K,2DAAO,K,IAAQ,M,2DAAQ,E,IAAI,M,2DAAQ,C,IAAG,Q,2DAAU,E,yHACxD,CAAC,KAAD,CAAQ,SAAR,CAAmB,QAAnB,CAA6B,KAA7B,EAAoC,OAApC,CAA4C,IAA5C,IAAsD,CAAC,C,+BACpD,IAAI,MAAJ,CAAU,6DAAV,C,QAGP,QAAQ,CAAR,CAAY,OAAS,EAArB,CACA,QAAQ,KAAR,CAAgB,OAAS,CAAzB,C,iCAEO,KAAK,MAAL,CAAe,UAAf,YAAoC,IAApC,CAA4C,OAA5C,C,kPAGU,M,CAAQ,O,8HACnB,I,CAAO,sBAAQ,MAAR,C,kCACN,KAAK,MAAL,CAAe,UAAf,KAA6B,IAA7B,yBAA0D,OAA1D,C,iQAGO,O,sJACP,KAAK,MAAL,CAAe,UAAf,iBAA0C,OAA1C,C,mPAGG,O,sJACH,KAAK,MAAL,CAAe,UAAf,kBAA2C,OAA3C,C,kPAGU,Q,KAAU,M,2DAAQ,C,IAAG,Q,2DAAU,E,oHAChD,QAAQ,MAAR,CAAiB,QAAjB,CACA,QAAQ,KAAR,CAAgB,OAAS,CAAzB,C,iCACO,KAAK,MAAL,CAAe,UAAf,cAAuC,OAAvC,C,2KAIT,GAAI,MAAO,OAAP,GAAkB,WAAlB,EAAiC,OAAO,OAA5C,CAAqD,CACpD,OAAO,OAAP,CAAiB,QACjB,CAFD,IAEO,CACN,OAAO,QAAP,CAAkB,QAClB","file":"vagalume.min.js","sourcesContent":["import fetch from 'node-fetch';\nimport { stringify } from 'querystring';\nimport dashify from 'dashify';\n\nconst webBaseUrl = 'https://www.vagalume.com.br';\nconst apiBaseUrl = 'https://api.vagalume.com.br';\n\nclass Vagalume {\n\n\tconstructor(apikey) {\n\t\tthis.apikey = apikey;\n\t}\n\n\t_fetch(url, params = []) {\n\t\tif (this.apikey && !params['apikey']) {\n\t\t\tparams['apikey'] = this.apikey;\n\t\t}\n\n\t\tvar qs = stringify(params);\n\t\treturn fetch(`${url}?${qs}`).then(res => res.json())\n\t}\n\n\tasync artist(artist, options = {}) {\n\t\tconst slug = dashify(artist);\n\t\treturn this._fetch(`${webBaseUrl}/${slug}/index.js`, options);\n\t}\n\n\tasync lyrics(options) {\n\t\tif (options.musid && (options.art || options.mus)) {\n\t\t\tdelete options.art;\n\t\t\tdelete options.mus;\n\t\t}\n\n\t\tif (options.extra) {\n\t\t\tif (options.extra instanceof Array) {\n\t\t\t\toptions.extra = options.extra.join(',');\n\t\t\t}\n\t\t}\n\n\t\treturn this._fetch(`${apiBaseUrl}/search.php`, options);\n\t}\n\n\tasync search(type = 'art' , query = '', limit = 5, options = {}) {\n\t\tif (['art', 'excerpt', 'artmus', 'alb'].indexOf(type) === -1) {\n\t\t\tthrow new Error('Tipo inválido. Disponíveis: art, excerpt, artmus, alb');\n\t\t}\n\t\t\n\t\toptions.q = query || '';\n\t\toptions.limit = limit || 5;\n\n\t\treturn this._fetch(`${apiBaseUrl}/search.${type}`, options);\n\t}\n\n\tasync discography(artist, options) {\n\t\tconst slug = dashify(artist);\n\t\treturn this._fetch(`${webBaseUrl}/${slug}/discografia/index.js`, options);\n\t}\n\n\tasync hotspots(options) {\n\t\treturn this._fetch(`${apiBaseUrl}/hotspots.php`, options);\n\t}\n\n\tasync news(options) {\n\t\treturn this._fetch(`${webBaseUrl}/news/index.js`, options);\t\n\t}\n\n\tasync artistImage(artistId, limit = 3, options = {}) {\n\t\toptions.bandID = artistId;\n\t\toptions.limit = limit || 3;\n\t\treturn this._fetch(`${apiBaseUrl}/image.php`, options);\n\t}\n}\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Vagalume;\n} else {\n\twindow.Vagalume = Vagalume;\n}"]}